   int fun(int n,int m,string &str1,string &str2,vector<vector<int>> &dp){
        if(n==0)
            return m;
        if(m==0)
            return n;
        
        if(dp[n][m]!=-1)
            return dp[n][m];
        
        if(str1[n-1]==str2[m-1])
            return dp[n][m]=fun(n-1,m-1,str1,str2,dp);
        
        int a1=1+fun(n-1,m,str1,str2,dp);
        int a2=1+fun(n,m-1,str1,str2,dp);
        int a3=1+fun(n-1,m-1,str1,str2,dp);
        
        return dp[n][m]=min({a1,a2,a3});
    }
    
    
    int editDistance(string str1, string str2){
        // Code here
        
        vector<vector<int>> dp(str1.size()+1,vector<int>(str2.size()+1,-1));
        return fun(str1.size(),str2.size(),str1,str2,dp);
        
