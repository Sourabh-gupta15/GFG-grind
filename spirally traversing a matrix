class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &matrix) {
        // code here
        int r = matrix.size();
        int c = matrix[0].size();
        
        int startingrow = 0;
        int startingcol = 0;
        int endingrow = r-1;
        int endingcol = c-1;
        int count =0;
        int total = r*c;
        
        vector<int> ans;
        while(count<total){
            // Print first row 
            for(int i=startingcol; count<total && i<=endingcol; i++){
                ans.push_back(matrix[startingrow][i]);
                count++;
            }
            startingrow++;
            
            
            //Print ending col
            for(int i=startingrow; count<total && i<=endingrow; i++){
                ans.push_back(matrix[i][endingcol]);
                count++;
            }
            endingcol--;
            
            //print ending row
            for(int i=endingcol; count<total && i>=startingcol; i--){
                ans.push_back(matrix[endingrow][i]);
                count++;
            }
            endingrow--;
            
            //print startingcol
            for(int i=endingrow; count<total && i>=startingrow; i--){
                ans.push_back(matrix[i][startingcol]);
                count++;
            }
            startingcol++;
        }
        
        return ans;


    }
};
